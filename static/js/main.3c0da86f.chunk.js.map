{"version":3,"sources":["images/Spotify_Icon_RGB_White.png","components/Loading/Loading.js","utils/skipUnavailableTracks.js","actions/fetch-actions.js","actions/action-types.js","utils/searchPrevTrack.js","css-variables/colors.js","components/CoverArt/PlayButton/styled.js","components/CoverArt/PlayButton/PlayButton.js","components/CoverArt/styled.js","components/CoverArt/CoverArt.js","components/PlaylistSelectorView/styled.js","variables.js","components/PlaylistSelectorView/PlaylistSelectorView.js","actions/player-control-actions.js","components/PlaylistPlayButton/styled.js","components/PlaylistPlayButton/PlaylistPlayButton.tsx","components/TrackControlButton/styled.js","components/TrackControlButton/TrackControlButton.tsx","containers/TrackContainer/styled.js","containers/TrackContainer/TrackContainer.js","components/PlaylistView/styled.js","components/PlaylistView/PlaylistView.js","components/SideNavbar/styled.js","css-variables/layout.js","components/SideNavbar/SideNavbar.js","reducers/index.js","store.js","config.js","utils/idFromHref.js","components/GenresView/styled.js","components/GenresView/GenresView.js","containers/MainContainer/styled.js","containers/MainContainer/MainContainer.js","components/NowPlaying/styled.js","components/NowPlaying/NowPlaying.tsx","components/PlayerControls/styled.js","components/PlayerControls/PlayerControls.tsx","components/VolumeControl/styled.js","components/VolumeControl/VolumeControl.js","containers/PlayerContainer/styled.js","containers/PlayerContainer/PlayerContainer.tsx","containers/App/styled.js","containers/App/App.tsx","index.tsx"],"names":["module","exports","Loading","style","color","playlist","nr","trackNumber","length","track","preview_url","fetchWithToken","url","token","fetch","headers","Headers","Authorization","access_token","then","res","json","fetchToken","dispatch","type","setToken","catch","err","console","log","normalizeTracks","trackArray","images","map","i","album","startPlaylist","href","getState","a","tracks","tracklist","data","error","message","description","imageUrl","name","owner","display_name","items","trackId","skipUnavailableTracks","spotifyGray","ActionButton","styled","div","Pause","Play","Wrapper","PlayButton","dataName","showPlay","data-name","defaultProps","Card","Clipart","props","icon","hover","css","ClipartWrapper","p","shrink","Title","bigTitle","CoverArt","state","showPlayBtn","handleMouseOver","setState","handleMouseLeave","s","handleMouseDown","handleMouseUp","handleClick","e","playClicked","target","dataset","nextProps","this","playBtn","onClick","onMouseOver","onMouseLeave","onMouseDown","onMouseUp","React","Component","Header","h1","template","gridTemplateColumns","w","rootUrl","PlaylistSelectorView","activePlaylistHref","history","isPaused","isPlaying","setPause","unpause","config","initPlay","push","replace","id","match","params","selection","onMount","onUnmount","windowWidth","Fragment","item","key","connect","sectionMessage","Button","button","PlaylistPlayButton","playIcon","faPlay","pauseIcon","faPause","speakerIcon","faVolumeUp","TrackControlButton","handlePause","handlePlay","hasPreview","isActive","isHovered","cursorStyle","showIcon","cursor","Artist","Description","TrackName","active","TrackContainer","showPlayButton","handleMouseEnter","artists","isActiveTrack","playTrack","pauseTrack","title","onMouseEnter","artist","join","ms","sec","Math","floor","min","formatDuration","duration_ms","DescriptionWrapper","InfoBox","Text","TracksWrapper","PlaylistView","handleButton","isActivePlaylist","startPlay","fetchPlaylistView","currentPlaylistHref","clearPlaylistView","activeTrackId","dangerouslySetInnerHTML","__html","playlistId","location","pathname","playlistView","tracklistView","actions","setTimeout","Group","GroupHeader","Navbar","nav","NavItem","NavLink","attrs","activeClassName","SideNavbar","src","logo","alt","to","pointerEvents","faSearch","initState","categoryPlaylist","featured","genres","newReleases","playReducer","action","albums","store","createStore","reducers","compose","applyMiddleware","thunk","window","devToolsExtension","noop","date","release_date","category","categoryId","playlists","args","split","Genres","navigate","idFromHref","fetchGenres","genre","icons","categories","Container","ListWrapper","ul","MainContainer","path","render","routeProps","GenresView","Image","img","ImageContainer","EllipsisText","NowPlaying","Controls","SkipButton","playButton","faPlayCircle","pauseButton","faPauseCircle","prevButton","faStepBackward","nextButton","faStepForward","PlayerControls","handleNext","handlePrev","hasPrevTrack","hasNextTrack","disabled","data-testid","VolumeControl","updateVolume","handleChange","value","onInput","max","step","defaultValue","footer","PlayerContainer","audioEl","Audio","currentTime","paused","playing","totalTime","handleDataLoaded","duration","handleTimeUpdate","songInd","searchPrevTrack","volume","play","stopTrack","pause","handleEnded","stop","playNextTrack","playPrevTrack","handleVolumeChange","addEventListener","removeEventListener","currentTrack","prevSongInd","Background","Section","App","tokenLoaded","innerWidth","tokenInterval","setInterval","handleResize","clearInterval","exact","from","component","oncontextmenu","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c0da86f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spotify_Icon_RGB_White.cc4e2784.png\";","import React from 'react';\n\nconst Loading = () => <div style={{ color: 'white' }}>Loading.....</div>;\n\nexport default Loading;\n","export default (playlist, nr) => {\n  let trackNumber = nr;\n  if (!playlist) {\n    return 0;\n  }\n  if (trackNumber >= playlist.length) {\n    return -1;\n  }\n\n  while (!playlist[trackNumber].track.preview_url) {\n    trackNumber += 1;\n    if (trackNumber >= playlist.length) {\n      return -1;\n    }\n  }\n\n  return trackNumber;\n};\n","import * as types from '../actions/action-types';\nimport skipUnavailableTracks from '../utils/skipUnavailableTracks';\n\nconst setToken = token => ({\n  token,\n  type: types.TOKEN_SET,\n});\n\nconst setGenres = genres => ({\n  genres,\n  type: types.GENRES_SET,\n});\n\nconst setCategoryPlaylist = categoryPlaylist => ({\n  categoryPlaylist,\n  type: types.CATEGORY_PLAYLIST_SET,\n});\n\nconst fetchWithToken = (url, token) => {\n  return fetch(url, {\n    headers: new Headers({\n      Authorization: 'Bearer ' + token.access_token,\n    }),\n  }).then(res => res.json());\n};\n\nexport const clearCategoryPlaylist = () => ({\n  type: types.CATEGORY_PLAYLIST_CLEAR,\n});\n\nexport const fetchToken = () => dispatch => {\n  return (\n    fetch('https://ndj7ih3fo8.execute-api.eu-central-1.amazonaws.com/LATEST/')\n      .then(res => res.json())\n      .then(token => dispatch(setToken(token)))\n      // tslint:disable-next-line\n      .catch(err => console.log('Error fetching Token', err))\n  ); // TODO add error handling\n};\n\nexport const fetchFeatured = () => (dispatch, getState) => {\n  const { token } = getState();\n  const url = 'https://api.spotify.com/v1/browse/featured-playlists';\n\n  return (\n    fetchWithToken(url, token)\n      .then(data => {\n        if (data.error) {\n          throw data.error.message;\n        }\n        dispatch({\n          featured: data.playlists.items,\n          sectionMessage: data.message,\n          type: types.FEATURED_SET,\n        });\n      })\n      // tslint:disable-next-line\n      .catch(err => console.log('Error fetching Featured', err))\n  ); // TODO add error handling\n};\n\nexport const fetchGenres = () => (dispatch, getState) => {\n  const { token } = getState();\n  const url = 'https://api.spotify.com/v1/browse/categories?limit=50';\n\n  fetchWithToken(url, token)\n    .then(data => {\n      if (data.error) {\n        throw data.error.message;\n      }\n      dispatch(setGenres(data.categories.items));\n    })\n    // tslint:disable-next-line\n    .catch(err => console.error(err));\n};\n\nexport const fetchCategoryPlaylist = categoryId => (dispatch, getState) => {\n  const { token } = getState();\n  const url = `https://api.spotify.com/v1/browse/categories/${categoryId}/playlists?limit=50`;\n\n  fetchWithToken(url, token)\n    .then(data => {\n      if (data.error) {\n        throw data.error.message;\n      }\n      dispatch(setCategoryPlaylist(data.playlists.items));\n    })\n    // tslint:disable-next-line\n    .catch(err => console.error(err));\n};\n\nconst setNewReleases = albums => ({\n  albums,\n  type: types.NEW_RELEASES_SET,\n});\n\nexport const fetchNewReleases = () => (dispatch, getState) => {\n  const { token } = getState();\n  const url = 'https://api.spotify.com/v1/browse/new-releases?limit=50';\n\n  fetchWithToken(url, token).then(data =>\n    dispatch(setNewReleases(data.albums.items))\n  );\n};\n\nconst normalizeTracks = (trackArray, images) => {\n  return trackArray.map((track, i) => {\n    return { track: { ...track, album: { images: [...images] } } };\n  });\n};\n\nexport const fetchPlaylistView = href => (dispatch, getState) => {\n  const { token, playlist } = getState();\n\n  if (href === playlist.href) {\n    dispatch({\n      type: types.COPY_TO_VIEW,\n    });\n  } else {\n    fetchWithToken(href, token).then(data => {\n      const tracks =\n        data.type === 'album'\n          ? normalizeTracks(data.tracks.items, data.images)\n          : data.tracks.items;\n      dispatch({\n        playlist: {\n          description: data.description,\n          href,\n          imageUrl: data.images[0].url,\n          name: data.name,\n          owner: data.owner && data.owner.display_name,\n          type: data.type,\n        },\n        tracks,\n        type: types.SET_PLAYLIST_VIEW,\n      });\n    });\n  }\n};\n\n// Fetches playlist if not in memory and starts it from first available track\nexport const startPlaylist = ({ href }) => async (dispatch, getState) => {\n  let { playlist, tracklist: tracks, token } = getState();\n  dispatch({ type: types.STOP_PLAY });\n\n  if (href !== playlist.href) {\n    const data = await fetchWithToken(href, token);\n    if (data.error) {\n      throw data.error.message;\n    }\n    playlist = {\n      description: data.description,\n      href,\n      imageUrl: data.images[0].url,\n      name: data.name,\n      owner: data.owner.display_name,\n      type: data.type,\n    };\n    tracks = data.tracks.items;\n  }\n\n  const trackId = skipUnavailableTracks(tracks, 0);\n  dispatch({\n    playlist,\n    trackId,\n    tracks,\n    type: types.PLAYLIST_SET,\n  });\n};\n\n// Fetches album if not in memory and starts it from first available track\nexport const startAlbum = ({ href }) => async (dispatch, getState) => {\n  let { playlist, token, tracklist } = getState();\n  let tracks = tracklist;\n\n  if (href !== playlist.href) {\n    try {\n      const data = await fetchWithToken(href, token);\n      playlist = {\n        artists: data.artists,\n        date: data.release_date,\n        href,\n        imageUrl: data.images[0].url,\n        name: data.name,\n      };\n      tracks = normalizeTracks(data.tracks.items, data.images);\n    } catch (err) {\n      // tslint:disable-next-line\n      console.error('Error fetching Album:', err);\n    }\n  }\n\n  const activeTrackId = skipUnavailableTracks(tracks, 0);\n  dispatch({ type: types.STOP_PLAY });\n\n  dispatch({\n    activeTrackId,\n    playlist,\n    tracks,\n    type: types.ALBUM_UPDATE,\n  });\n};\n\nexport const clearPlaylistView = () => (dispatch, getState) => {\n  dispatch({\n    type: types.CLEAR_PLAYLIST_VIEW,\n  });\n};\n\nexport const startPlayFromTracklist = (track = 0) => {\n  return (dispatch, getState) => {\n    const { tracklistView: tracklist } = getState();\n    const trackId = skipUnavailableTracks(tracklist, track);\n\n    dispatch({ type: types.STOP_PLAY });\n\n    setTimeout(() => {\n      dispatch({\n        trackId,\n        type: types.COPY_FROM_VIEW_AND_PLAY,\n      });\n    }, 0);\n  };\n};\n","export const ALBUM_UPDATE = 'ALBUM_UPDATE';\nexport const CATEGORY_PLAYLIST_CLEAR = 'CATEGORY_PLAYLIST_CLEAR';\nexport const CATEGORY_PLAYLIST_SET = 'CATEGORY_PLAYLIST_SET';\nexport const CLEAR_PLAYLIST_VIEW = 'CLEAR_PLAYLIST_VIEW';\nexport const COPY_FROM_VIEW_AND_PLAY = 'COPY_FROM_VIEW_AND_PLAY';\nexport const COPY_TO_VIEW = 'COPY_TO_VIEW';\nexport const FEATURED_SET = 'FEATURED_SET';\nexport const GENRES_SET = 'GENRES_SET';\nexport const NEW_RELEASES_SET = 'NEW_RELEASES_SET';\nexport const PLAY_NEXT_TRACK = 'PLAY_NEXT_TRACK';\nexport const PLAY_TRACK = 'PLAY_TRACK';\nexport const PLAYLIST_SET = 'PLAYLIST_SET';\nexport const RESET_NO_PREVIEW = 'RESET_NO_PREVIEW';\nexport const SET_PAUSE = 'SET_PAUSE';\nexport const SET_PLAYLIST_VIEW = 'SET_PLAYLIST_VIEW';\nexport const STOP_PLAY = 'STOP_PLAY';\nexport const STOP_TRACK = 'STOP_TRACK';\nexport const TOKEN_SET = 'TOKEN_SET';\nexport const TRACK_TIME_UPDATE = 'TRACK_TIME_UPDATE';\nexport const UNPAUSE = 'UNPAUSE';\n","export default (playlist, nr) => {\n  let trackNumber = nr;\n  if (trackNumber <= 0) {\n    return -1;\n  }\n\n  trackNumber -= 1;\n  while (!playlist[trackNumber].track.preview_url) {\n    trackNumber -= 1;\n    if (trackNumber < 0) {\n      return -1;\n    }\n  }\n\n  return trackNumber;\n};\n","export const spotifyGreen = '#1DB954';\nexport const spotifyGreenPlaying = '#1ED660';\nexport const spotifyBlack = '#191414';\nexport const spotifyWhite = '#FFFFFF';\nexport const spotifyGray = 'rgb(160, 160, 160)';\n","import styled from 'styled-components';\n\nimport { spotifyGreen } from '../../../css-variables/colors';\n\nconst ActionButton = styled.div`\n  pointer-events: none;\n  position: absolute;\n  top: calc(50% - 16px);\n`;\n\nexport const Pause = styled(ActionButton)`\n  border-left: 5px solid #fff;\n  border-right: 5px solid #fff;\n  height: 32px;\n  left: calc(50% - 9px);\n  width: 18px;\n`;\n\nexport const Play = styled(ActionButton)`\n  border: 15px solid transparent;\n  border-left-color: #fff;\n  height: 0;\n  left: calc(50%);\n  transform: scaleX(1.5);\n  width: 0;\n`;\n\nexport const Wrapper = styled.div`\n  background-color: ${spotifyGreen};\n  border-radius: 50%;\n  bottom: 16px;\n  cursor: default;\n  filter: brightness(1);\n  height: 40px;\n  position: absolute;\n  right: 20px;\n  transition: transform 0.1s ease;\n  width: 40px;\n\n  &:hover {\n    border-width: 2px;\n    transform: scale(1.1);\n  }\n\n  &:active {\n    border-width: 1px;\n    transform: scale(1);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Pause, Play, Wrapper } from './styled';\n\nconst propTypes = {\n  dataName: PropTypes.string,\n  showPlay: PropTypes.bool,\n};\n\nconst defaultProps = {\n  dataName: 'play',\n  showPlay: true,\n};\n\nconst PlayButton = ({ dataName, showPlay }) => (\n  <Wrapper data-name={dataName}>{showPlay ? <Play /> : <Pause />}</Wrapper>\n);\n\nPlayButton.propTypes = propTypes;\nPlayButton.defaultProps = defaultProps;\n\nexport default PlayButton;\n","import styled, { css } from 'styled-components';\n\nexport const Card = styled.div`\n  cursor: pointer;\n  margin-bottom: 35px;\n  position: relative;\n`;\n\nexport const Clipart = styled.div`\n  backface-visibility: hidden;\n  background-image: url('${props => props.icon}');\n  background-size: cover;\n  filter: brightness(1);\n  height: 0;\n  padding-bottom: 100%;\n  transition: all 1s ease;\n  transition: filter 0.3s cubic-bezier(0.3, 0, 0, 1);\n  width: 100%;\n\n  ${props =>\n    props.hover &&\n    css`\n      filter: brightness(0.3);\n    `};\n`;\n\nexport const ClipartWrapper = styled.div`\n  box-shadow: ${p => (p.shrink ? '0 0 0' : '0 0 10px rgba(0, 0, 0, 0.3)')};\n  transform: scale(${p => (p.shrink ? 0.95 : 1)});\n  transition: transform 0.1s ease;\n`;\n\nexport const Title = styled.p`\n  color: #fff;\n  display: block;\n  font-size: ${p => (p.bigTitle ? '26px' : '14px')};\n  font-weight: ${p => (p.bigTitle ? 600 : 400)};\n  height: ${p => (p.bigTitle ? '36px' : '20px')};\n  margin: 12px 0 4px;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 0 8px;\n  max-width: 320px;\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PlayButton from './PlayButton';\nimport { Card, Clipart, ClipartWrapper, Title, Wrapper } from './styled';\n\nconst propTypes = {\n  bigTitle: PropTypes.bool,\n  handleClick: PropTypes.func.isRequired,\n  icon: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  playBtn: PropTypes.bool,\n};\n\nconst defaultProps = {\n  bigTitle: false,\n  playBtn: true,\n};\n\nclass CoverArt extends React.Component {\n  state = {\n    hover: this.props.showPlayBtn,\n    showPlay: true,\n    showPlayBtn: this.props.showPlayBtn,\n    shrink: false,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.showPlayBtn !== nextProps.showPlayBtn) {\n      this.setState(s => ({\n        hover: nextProps.showPlayBtn,\n        showPlayBtn: nextProps.showPlayBtn,\n      }));\n    }\n  }\n\n  handleMouseOver = () => {\n    this.setState(() => ({ hover: true }));\n  };\n\n  handleMouseLeave = () => {\n    this.setState(s => ({ hover: false || s.showPlayBtn }));\n  };\n\n  handleMouseDown = () => {\n    this.setState(() => ({ shrink: true }));\n  };\n\n  handleMouseUp = () => {\n    this.setState(() => ({ shrink: false }));\n  };\n\n  handleClick = e => {\n    const { href, handleClick } = this.props;\n    const dataName = e.target.dataset.name;\n    let playClicked = false;\n    if (dataName === 'play') {\n      playClicked = true;\n    }\n    handleClick(href, playClicked);\n  };\n\n  render() {\n    const { showPlayBtn, shrink, hover } = this.state;\n    const { bigTitle, icon, name, playBtn } = this.props;\n\n    return (\n      <Wrapper>\n        <Card\n          onClick={this.handleClick}\n          onMouseOver={this.handleMouseOver}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          <ClipartWrapper\n            shrink={shrink}\n            onMouseDown={this.handleMouseDown}\n            onMouseUp={this.handleMouseUp}\n          >\n            <Clipart hover={hover} icon={icon} />\n            {playBtn &&\n              (hover || showPlayBtn) && (\n                <PlayButton dataName=\"play\" showPlay={!showPlayBtn} />\n              )}\n          </ClipartWrapper>\n          <Title bigTitle={bigTitle}>{name}</Title>\n        </Card>\n      </Wrapper>\n    );\n  }\n}\n\nCoverArt.propTypes = propTypes;\nCoverArt.defaultProps = defaultProps;\n\nexport default CoverArt;\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  color: #fff;\n  font-size: 36px;\n  font-weight: 600;\n  letter-spacing: -0.18px;\n  line-height: 44px;\n  margin: 0 0 24px;\n  padding-top: 24px;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${p => p.template};\n  justify-content: center;\n  margin: auto;\n  max-width: 1480px;\n  padding: 0 28px;\n`;\n","export const gridTemplateColumns = w => {\n  switch (true) {\n    case w <= 547:\n      return 'repeat(2, 1fr)';\n    case w >= 548 && w <= 771:\n      return 'repeat(3, 1fr)';\n    case w >= 772 && w <= 979:\n      return 'repeat(4, 1fr)';\n    default:\n      return 'repeat(6, 1fr)';\n  }\n};\n\nexport const rootUrl = 'https://api.spotify.com/v1';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nimport CoverArt from '../CoverArt';\nimport Loading from '../Loading';\nimport { Header, Wrapper } from './styled';\n\nimport { gridTemplateColumns, rootUrl } from '../../variables';\n\nclass PlaylistSelectorView extends Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    if (!this.props.selection) {\n      return this.props.config.onMount(id);\n    }\n  }\n\n  componentWillUnmount() {\n    const { onUnmount } = this.props.config;\n    if (onUnmount) {\n      onUnmount();\n    }\n  }\n\n  handleClick = (href, playClicked) => {\n    const {\n      activePlaylistHref,\n      history,\n      isPaused,\n      isPlaying,\n      setPause,\n      unpause,\n    } = this.props;\n\n    if (playClicked) {\n      if (isPlaying && href === activePlaylistHref) {\n        return isPaused ? unpause() : setPause();\n      } else {\n        return this.props.config.initPlay(href);\n      }\n    }\n\n    if (history) {\n      return history.push(`/${href.replace(rootUrl + '/', '')}`);\n    }\n  };\n\n  render() {\n    const {\n      selection,\n      activePlaylistHref,\n      isPaused,\n      isPlaying,\n      message,\n      windowWidth,\n    } = this.props;\n\n    if (!selection) {\n      return <Loading />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header>{message}</Header>\n        <Wrapper template={gridTemplateColumns(windowWidth)}>\n          {selection.map(item => {\n            if (!item.images.length) {\n              return null;\n            }\n            return (\n              <CoverArt\n                key={item.id}\n                handleClick={this.handleClick}\n                href={item.href}\n                icon={item.images[0].url}\n                id={item.id}\n                name={item.name}\n                showPlayBtn={\n                  activePlaylistHref === item.href && isPlaying && !isPaused\n                }\n              />\n            );\n          })}\n        </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  activePlaylistHref: state.playlist.href,\n  isPaused: state.isPaused,\n  isPlaying: state.isPlaying,\n  message: state.sectionMessage || props.config.sectionMessage,\n  selection: state[props.config.selection],\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPause: () => {\n    dispatch(actions.setPause());\n  },\n  unpause: () => {\n    dispatch(actions.unpause());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaylistSelectorView);\n","import * as types from '../actions/action-types';\n\nimport searchPrevTrack from '../utils/searchPrevTrack';\nimport skipUnavailableTracks from '../utils/skipUnavailableTracks';\n\nexport const stopPlay = () => ({\n  type: types.STOP_PLAY,\n});\n\nexport const playNextTrack = (playlist, songInd) => dispatch => {\n  if (songInd === -1) {\n    return;\n  }\n\n  const nextSongInd = skipUnavailableTracks(playlist, songInd + 1);\n\n  if (nextSongInd === -1) {\n    return dispatch(stopPlay());\n  }\n\n  dispatch({ type: types.STOP_TRACK });\n\n  setTimeout(() => {\n    dispatch({\n      activeTrackId: skipUnavailableTracks(playlist, songInd + 1),\n      type: types.PLAY_NEXT_TRACK,\n    });\n  }, 0);\n};\n\nexport const playPrevTrack = (playlist, songInd) => dispatch => {\n  if (songInd === -1) {\n    return;\n  }\n  const prevSongInd = searchPrevTrack(playlist, songInd);\n  if (prevSongInd === -1) {\n    return { type: 'NOOP' };\n  }\n  dispatch({ type: types.STOP_TRACK });\n  setTimeout(() => {\n    dispatch({\n      activeTrackId: prevSongInd,\n      type: types.PLAY_NEXT_TRACK,\n    });\n  }, 0);\n};\n\nexport const setPause = () => {\n  return {\n    type: types.SET_PAUSE,\n  };\n};\n\nexport const unpause = () => ({\n  type: types.UNPAUSE,\n});\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: #2ebd59;\n  border: none;\n  border-radius: 500px;\n  color: #fff;\n  cursor: pointer;\n  font-size: 14px;\n  height: 43px;\n  margin-top: 16px;\n  outline: none;\n  padding: 13px 44px;\n  width: 130px;\n`;\n","import React from 'react';\n\nimport { Button } from './styled';\n\nexport interface IProps {\n  isPlaying: boolean;\n  onClick: () => void;\n}\n\nconst PlaylistPlayButton: React.SFC<IProps> = ({ isPlaying, onClick }) => {\n  return (\n    <div>\n      <Button onClick={onClick}>{isPlaying ? 'PAUSE' : 'PLAY'}</Button>\n    </div>\n  );\n};\n\nexport default PlaylistPlayButton;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  font-size: 20px;\n  padding-right: 16px;\n  width: 48px;\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { Wrapper } from './styled';\n\nconst playIcon = <FontAwesomeIcon icon={faPlay} />;\nconst pauseIcon = <FontAwesomeIcon icon={faPause} />;\nconst speakerIcon = <FontAwesomeIcon icon={faVolumeUp} />;\n\nexport interface IProps {\n  handlePause: () => void;\n  handlePlay: () => void;\n  hasPreview: boolean;\n  isActive: boolean;\n  isHovered: boolean;\n  isPlaying: boolean;\n  nr: number;\n  unpause: () => void;\n}\n\nconst TrackControlButton: React.SFC<IProps> = ({\n  handlePause,\n  handlePlay,\n  hasPreview,\n  isActive,\n  isHovered,\n  isPlaying,\n  nr,\n  unpause,\n}) => {\n  let cursorStyle = 'default';\n  const showIcon = hasPreview && (isHovered || isPlaying);\n  let icon = null;\n\n  if (hasPreview) {\n    cursorStyle = 'pointer';\n    if (isHovered && isPlaying) {\n      icon = pauseIcon;\n    } else if (isHovered && !isPlaying) {\n      icon = playIcon;\n    } else if (isPlaying) {\n      icon = speakerIcon;\n    }\n  }\n\n  return (\n    <Wrapper\n      style={{ cursor: cursorStyle }}\n      onClick={!isActive ? handlePlay : isPlaying ? handlePause : unpause}\n    >\n      {showIcon ? icon : ++nr + '.'}\n    </Wrapper>\n  );\n};\n\nexport default TrackControlButton;\n","import styled from 'styled-components';\n\nimport { spotifyGray, spotifyGreenPlaying } from '../../css-variables/colors';\n\nexport const Artist = styled.div`\n  color: ${spotifyGray};\n  font-weight: 200;\n`;\n\nexport const Description = styled.div`\n  flex: 1;\n`;\n\nexport const TrackName = styled.div`\n  font-size: 16px;\n  font-weight: 200;\n`;\n\nexport const Wrapper = styled.div`\n  align-items: center;\n  color: ${p =>\n    p.active\n      ? spotifyGreenPlaying\n      : p.hasPreview ? 'rgba(255, 255, 255, 0.9)' : 'rgba(255, 255, 255, 0.3)'};\n  display: flex;\n  flex-direction: row;\n  font-size: 14px;\n  font-weight: 200;\n  height: 70px;\n  max-width: 1480px;\n  padding: 0 28px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React, { Component } from 'react';\n\nimport TrackControlButton from '../../components/TrackControlButton';\n\nimport { Artist, Description, TrackName, Wrapper } from './styled';\n\nconst formatDuration = ms => {\n  let sec = Math.floor(ms / 1000);\n  const min = Math.floor(sec / 60);\n  sec = `${sec % 60}`;\n  sec = sec.length < 2 ? 0 + sec : sec;\n  return `${min}:${sec}`;\n};\n\nclass TrackContainer extends Component {\n  state = {\n    showPlayButton: false,\n  };\n\n  handleMouseEnter = () => {\n    this.setState(() => ({\n      cursor: this.props.track.preview_url ? 'pointer' : 'default',\n      showPlayButton: this.props.track.preview_url,\n    }));\n  };\n\n  handleMouseLeave = () => {\n    this.setState(() => ({\n      cursor: 'default',\n      showPlayButton: false,\n    }));\n  };\n\n  render() {\n    const {\n      artists,\n      isActiveTrack,\n      track,\n      nr,\n      playTrack,\n      pauseTrack,\n      isPlaying,\n    } = this.props;\n    const { showPlayButton } = this.state;\n\n    return (\n      <Wrapper\n        active={isActiveTrack}\n        title={track.preview_url ? '' : 'No preview available'}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        hasPreview={track.preview_url}\n      >\n        <TrackControlButton\n          isHovered={!!showPlayButton}\n          isPlaying={isActiveTrack && isPlaying}\n          hasPreview={track.preview_url}\n          nr={nr}\n          handlePlay={() => track.preview_url && playTrack()}\n          handlePause={() => pauseTrack()}\n          unpause={this.props.unpause}\n          isActive={isActiveTrack}\n        />\n        <Description>\n          <TrackName>{track.name}</TrackName>\n          <Artist>\n            {artists && artists.map(artist => artist.name).join(', ')}\n            {track.album && track.album.name && ` • ${track.album.name}`}\n          </Artist>\n        </Description>\n        <div>{formatDuration(track.duration_ms)}</div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TrackContainer;\n","import styled from 'styled-components';\n\nexport const DescriptionWrapper = styled.div`\n  align-items: center;\n  justify-content: flex-start;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0 8px;\n  position: relative;\n  text-align: center;\n  top: 40px;\n\n  @media (max-width: 1199px) {\n    top: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n    max-width: 100%;\n    width: 100%;\n    max-height: 255px;\n  }\n\n  @media (min-width: 1200px) and (min-width: 1499px) {\n  }\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n`;\n\nexport const Text = styled.div`\n  color: rgba(255, 255, 255, 0.6);\n  font-size: 14px;\n  font-weight: 200;\n  line-height: 28px;\n  margin: 12px;\n  pointer-events: none;\n\n  & > a {\n    color: currentColor;\n  }\n`;\n\nexport const TracksWrapper = styled.div`\n  flex: 2;\n\n  @media (max-width: 1199px) {\n  }\n\n  @media (min-width: 1200px) and (max-width: 1499px) {\n    flex: 3;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  color: white;\n  margin: auto;\n  max-width: 1480px;\n  padding: 35px 28px 0;\n\n  @media (min-width: 1200px) and (min-width: 1499px) {\n  }\n\n  @media (max-width: 1199px) {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    min-width: 515px;\n    width: 100%;\n  }\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nimport CoverArt from '../CoverArt';\nimport PlaylistPlayButton from '../PlaylistPlayButton';\nimport TrackContainer from '../../containers/TrackContainer';\nimport Loading from '../Loading';\nimport {\n  DescriptionWrapper,\n  InfoBox,\n  Text,\n  TracksWrapper,\n  Wrapper,\n} from './styled';\n\nimport { rootUrl } from '../../variables';\n\nclass PlaylistView extends Component {\n  componentDidMount() {\n    this.props.fetchPlaylistView(this.props.currentPlaylistHref);\n  }\n\n  componentWillUnmount() {\n    this.props.clearPlaylistView();\n  }\n\n  handleButton = () => {\n    const {\n      isPaused,\n      isPlaying,\n      isActivePlaylist,\n      setPause,\n      unpause,\n      startPlay,\n    } = this.props;\n    if (isActivePlaylist && isPlaying && !isPaused) {\n      return setPause();\n    }\n    if (isActivePlaylist && isPlaying && isPaused) {\n      return unpause();\n    }\n    if (!isActivePlaylist) {\n      return startPlay();\n    }\n  };\n\n  render() {\n    const {\n      activePlaylistHref,\n      activeTrackId,\n      currentPlaylistHref,\n      isPaused,\n      isPlaying,\n      playlist,\n      setPause,\n      startPlay,\n      tracklist,\n      isActivePlaylist,\n    } = this.props;\n\n    if (!tracklist) {\n      return <Loading />;\n    }\n\n    return (\n      <Wrapper>\n        <DescriptionWrapper>\n          <CoverArt\n            handleClick={this.handleButton}\n            icon={playlist.imageUrl}\n            id={currentPlaylistHref}\n            href={currentPlaylistHref}\n            name={playlist.name}\n            showPlayBtn={\n              activePlaylistHref === currentPlaylistHref &&\n              isPlaying &&\n              !isPaused\n            }\n            bigTitle={true}\n          />\n          <InfoBox>\n            <Text dangerouslySetInnerHTML={{ __html: playlist.description }} />\n            <Text>\n              {tracklist.length} song{tracklist.length > 1 ? 's' : ''}\n            </Text>\n            <PlaylistPlayButton\n              isPlaying={isActivePlaylist && isPlaying && !isPaused}\n              onClick={this.handleButton}\n            />\n          </InfoBox>\n        </DescriptionWrapper>\n        <TracksWrapper>\n          {tracklist.map(({ track }, i) => {\n            return (\n              <TrackContainer\n                key={track.id}\n                artists={track.artists}\n                nr={+i}\n                track={track}\n                playlistId={playlist.id}\n                isPlaying={isPlaying && !isPaused}\n                isActiveTrack={isActivePlaylist && +i === activeTrackId}\n                playTrack={() => startPlay(+i)}\n                pauseTrack={() => setPause()}\n                unpause={this.props.unpause}\n                activeTrackId={isActivePlaylist ? activeTrackId : null}\n              />\n            );\n          })}\n        </TracksWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  activePlaylistHref: state.playlist.href,\n  activeTrackId: state.activeTrackId,\n  currentPlaylistHref: rootUrl + props.history.location.pathname,\n  isActivePlaylist:\n    state.playlist.href === rootUrl + props.history.location.pathname,\n  isPaused: state.isPaused,\n  isPlaying: state.isPlaying,\n  playlist: state.playlistView,\n  tracklist: state.tracklistView,\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  clearPlaylistView: () => {\n    dispatch(actions.clearPlaylistView());\n  },\n  fetchPlaylistView: href => {\n    dispatch(actions.fetchPlaylistView(href));\n  },\n  setPause: () => {\n    dispatch(actions.setPause());\n  },\n  startPlay: track => {\n    dispatch(actions.startPlayFromTracklist(track));\n  },\n  unpause: () => {\n    dispatch(actions.unpause());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaylistView);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport { sidebarWidth } from '../../css-variables/layout';\nimport { spotifyGray, spotifyGreen } from '../../css-variables/colors';\n\nconst activeClassName = 'selected';\n\nexport const Group = styled.div`\n  border: none;\n  border-top: 1px solid rgba(255, 255, 255, 0.25);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0.24px;\n  line-height: 26px;\n  padding: 13px 0 8px 0;\n`;\n\nexport const GroupHeader = styled.div`\n  border: none;\n  padding-bottom: 10px;\n`;\n\nexport const Navbar = styled.nav`\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${spotifyGray};\n  font-size: 16px;\n  font-weight: bold;\n  height: 100vh;\n  padding: 24px 24px 95px 24px;\n  position: fixed;\n  width: 100%;\n  max-width: ${sidebarWidth};\n  min-width: ${sidebarWidth};\n\n  & img {\n    width: 32px;\n  }\n\n  & hr {\n    color: ${spotifyGray};\n  }\n`;\n\nexport const NavItem = styled(NavLink).attrs({\n  activeClassName,\n})`\n  align-items: center;\n  color: ${spotifyGray};\n  display: flex;\n  justify-content: space-between;\n\n  &.${activeClassName} {\n    color: ${spotifyGreen};\n  }\n\n  & .fa-search {\n    font-size: 1.25rem;\n  }\n`;\n","export const sidebarWidth = '220px';\nexport const playerHeight = '90px';\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { Group, GroupHeader, Navbar, NavItem } from './styled';\nimport logo from '../../images/Spotify_Icon_RGB_White.png';\n\nclass SideNavbar extends Component {\n  render() {\n    return (\n      <Navbar>\n        <GroupHeader>\n          <img src={logo} alt=\"spotify logo\" />\n        </GroupHeader>\n        <Group>\n          <NavItem to=\"/search\" style={{ pointerEvents: 'none' }}>\n            Search<FontAwesomeIcon icon={faSearch} />\n          </NavItem>\n        </Group>\n        <Group>\n          <NavItem to=\"/browse\">Home</NavItem>\n        </Group>\n      </Navbar>\n    );\n  }\n}\n\nexport default SideNavbar;\n","import * as types from '../actions/action-types';\n\nconst initState = {\n  activeTrackId: -1,\n  categoryPlaylist: null,\n  featured: null,\n  genres: [],\n  isPaused: false,\n  isPlaying: false,\n  newReleases: null,\n  playlist: {},\n  playlistView: {},\n  sectionMessage: null,\n  token: null,\n  tracklist: null,\n  tracklistView: null,\n};\n\nconst playReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.PLAY_NEXT_TRACK:\n      return {\n        ...state,\n        activeTrackId: action.activeTrackId,\n        isPaused: false,\n        isPlaying: true,\n      };\n\n    case types.STOP_TRACK: {\n      return {\n        ...state,\n        isPaused: false,\n        isPlaying: false,\n      };\n    }\n\n    case types.TOKEN_SET:\n      return {\n        ...state,\n        token: action.token,\n      };\n\n    case types.FEATURED_SET:\n      return {\n        ...state,\n        featured: action.featured,\n        sectionMessage: action.sectionMessage,\n        tracklist: action.tracklist,\n      };\n\n    case types.GENRES_SET:\n      return {\n        ...state,\n        genres: action.genres,\n      };\n\n    case types.NEW_RELEASES_SET:\n      return {\n        ...state,\n        newReleases: action.albums,\n        sectionMessage: null,\n      };\n\n    case types.CATEGORY_PLAYLIST_SET:\n      return {\n        ...state,\n        categoryPlaylist: action.categoryPlaylist,\n      };\n\n    case types.CATEGORY_PLAYLIST_CLEAR:\n      return {\n        ...state,\n        categoryPlaylist: null,\n      };\n\n    case types.ALBUM_UPDATE:\n      return {\n        ...state,\n        activeTrackId: action.activeTrackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: {\n          ...state.playlist,\n          ...action.playlist,\n        },\n        tracklist: action.tracks,\n      };\n\n    case types.PLAYLIST_SET:\n      return {\n        ...state,\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: {\n          ...state.playlist,\n          ...action.playlist,\n        },\n        tracklist: [...action.tracks],\n      };\n\n    case types.PLAY_TRACK:\n      return {\n        ...state,\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n      };\n\n    case types.SET_PAUSE:\n      return {\n        ...state,\n        isPaused: true,\n        isPlaying: true,\n      };\n\n    case types.COPY_TO_VIEW:\n      return {\n        ...state,\n        playlistView: { ...state.playlist },\n        tracklistView: [...state.tracklist],\n      };\n\n    case types.COPY_FROM_VIEW_AND_PLAY:\n      return {\n        ...state,\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: { ...state.playlistView },\n        tracklist: [...state.tracklistView],\n      };\n\n    case types.CLEAR_PLAYLIST_VIEW:\n      return {\n        ...state,\n        playlistView: {},\n        tracklistView: null,\n      };\n\n    case types.UNPAUSE:\n      return {\n        ...state,\n        isPaused: false,\n        isPlaying: true,\n      };\n\n    case types.SET_PLAYLIST_VIEW:\n      return {\n        ...state,\n        playlistView: { ...action.playlist },\n        tracklistView: [...action.tracks],\n      };\n\n    case types.STOP_PLAY:\n      return {\n        ...state,\n        activeTrackId: -1,\n        isPaused: false,\n        isPlaying: false,\n        playlist: {},\n        tracklist: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : noop => noop\n  )\n);\n\nexport default store;\n","import * as actions from './actions';\nimport store from './store';\n\nexport default {\n  albums: {\n    initPlay: href => store.dispatch(actions.startAlbum({ href })),\n    onMount: () => store.dispatch(actions.fetchNewReleases()),\n    sectionMessage: 'New Albums and Singles',\n    selection: 'newReleases',\n  },\n  category: {\n    initPlay: href => store.dispatch(actions.startPlaylist({ href })),\n    onMount: id => store.dispatch(actions.fetchCategoryPlaylist(id)),\n    onUnmount: () => store.dispatch(actions.clearCategoryPlaylist()),\n    sectionMessage: 'Popular Playlists',\n    selection: 'categoryPlaylist',\n  },\n  featured: {\n    initPlay: href => store.dispatch(actions.startPlaylist({ href })),\n    onMount: () => store.dispatch(actions.fetchFeatured()),\n    selection: 'featured',\n  },\n};\n","export default href => {\n  const args = href.split('/');\n  return args[args.length - 1];\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  color: #fff;\n  font-size: 36px;\n  font-weight: 600;\n  letter-spacing: -0.18px;\n  line-height: 44px;\n  margin: 24px 0;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${p => p.template};\n  justify-content: center;\n  padding: 0 28px;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\nimport idFromHref from '../../utils/idFromHref';\n\nimport CoverArt from '../CoverArt';\nimport { Header, Wrapper } from './styled';\n\nconst gridTemplateColumns = w => {\n  switch (true) {\n    case w <= 547:\n      return 'repeat(2, minmax(16px, 218px))';\n    case w >= 548 && w <= 771:\n      return 'repeat(3, minmax(146px, 230px))';\n    case w >= 772 && w <= 979:\n      return 'repeat(4, minmax(166px, 217px))';\n    default:\n      return 'repeat(6, minmax(145px, 230px))';\n  }\n};\n\nclass Genres extends React.Component {\n  componentDidMount() {\n    this.props.fetchGenres();\n  }\n\n  navigate = url => {\n    const { history } = this.props;\n    history.push(`/view/${idFromHref(url)}`);\n  };\n\n  render() {\n    const { genres } = this.props;\n    return (\n      <React.Fragment>\n        <Header>Genres & Moods</Header>\n        <Wrapper template={gridTemplateColumns(this.props.windowWidth)}>\n          {genres.map(genre => (\n            <CoverArt\n              key={genre.id}\n              icon={genre.icons[0].url}\n              handleClick={this.navigate}\n              playBtn={false}\n              {...genre}\n            />\n          ))}\n        </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  genres: state.genres,\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  fetchGenres: () => {\n    dispatch(actions.fetchGenres());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Genres);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport { spotifyGray, spotifyGreen } from '../../css-variables/colors';\n\nconst activeClassName = 'selected';\n\nexport const Container = styled.div`\n  font-size: 12.8px;\n  font-weight: bold;\n  letter-spacing: 1px;\n  margin: auto;\n  padding: 0 28px;\n  width: 100%;\n`;\n\nexport const ListWrapper = styled.ul`\n  font-weight: bold;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  align-items: center;\n\n  & li {\n    margin: 10px;\n    margin-top: 0;\n    padding: 10px;\n    padding-top: 0;\n  }\n`;\n\nexport const Navbar = styled.nav`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 86px;\n  justify-content: center;\n  min-width: 515px;\n  padding: 20px 0;\n`;\n\nexport const NavItem = styled(NavLink).attrs({\n  activeClassName,\n})`\n  color: ${spotifyGray};\n  margin: 10px;\n  padding: 10px;\n  padding-bottom: 0;\n  transition-duration: 0.2s;\n  transition-property: color;\n\n  &.${activeClassName} {\n    color: white;\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      left: 35%;\n      bottom: -5px;\n      height: 1px;\n      width: 20px;\n      padding-bottom: 5px;\n      border-bottom: 2px solid ${spotifyGreen};\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport config from '../../config';\n\nimport PlaylistSelectorView from '../../components/PlaylistSelectorView';\nimport GenresView from '../../components/GenresView';\n\nimport { Container, ListWrapper, Navbar, NavItem } from './styled';\n\nclass MainContainer extends Component {\n  render() {\n    return (\n      <Container>\n        <Navbar>\n          <ListWrapper>\n            <NavItem to=\"/browse/featured\">FEATURED</NavItem>\n            <NavItem to=\"/browse/genres\">GENRES & MOODS</NavItem>\n            <NavItem to=\"/browse/newreleases\">NEW RELEASES</NavItem>\n            {/* <NavItem to=\"/browse/discover\">DISCOVER</NavItem> */}\n          </ListWrapper>\n        </Navbar>\n        <Route\n          path=\"/browse/featured\"\n          render={routeProps => (\n            <PlaylistSelectorView\n              windowWidth={this.props.windowWidth}\n              {...routeProps}\n              config={config.featured}\n            />\n          )}\n        />\n        <Route\n          path=\"/browse/genres\"\n          render={routeProps => (\n            <GenresView windowWidth={this.props.windowWidth} {...routeProps} />\n          )}\n        />\n        <Route\n          path=\"/browse/newreleases\"\n          render={routeProps => (\n            <PlaylistSelectorView\n              windowWidth={this.props.windowWidth}\n              {...routeProps}\n              config={config.albums}\n            />\n          )}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default MainContainer;\n","import styled from 'styled-components';\n\nexport const Artist = styled.div`\n  color: #a0a0a0;\n  font-size: 11px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n`;\n\nexport const ImageContainer = styled.div`\n  margin-right: 13px;\n  width: 64px;\n`;\n\nexport const InfoBox = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  line-height: 20px;\n  width: calc(100% - 76px);\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  font-size: 14px;\n  max-width: 100%;\n`;\n\nexport const EllipsisText = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 64px;\n  justify-content: flex-start;\n  max-width: 450px;\n  width: 30%;\n`;\n","import React from 'react';\n\nimport {\n  Artist,\n  EllipsisText,\n  Image,\n  ImageContainer,\n  InfoBox,\n  Title,\n  Wrapper,\n} from './styled';\n\nexport interface IProps {\n  artist: string;\n  src: string;\n  title: string;\n}\n\nconst NowPlaying: React.SFC<IProps> = ({ artist, title, src }) => (\n  <Wrapper>\n    <ImageContainer>\n      <Image src={src} alt={`${artist} - ${title}`} />\n    </ImageContainer>\n    <InfoBox>\n      <Title>\n        <EllipsisText>{title}</EllipsisText>\n      </Title>\n      <Artist>{artist}</Artist>\n    </InfoBox>\n  </Wrapper>\n);\n\nexport default NowPlaying;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  flex: 1;\n  height: 56px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Controls = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  height: 32px;\n  justify-content: space-between;\n  align-items: center;\n  width: 224px;\n\n  & > button {\n    color: #a0a0a0;\n    outline: none;\n  }\n`;\n\nexport const PlayButton = styled.button`\n  background-color: transparent;\n  border: none;\n  // color: #fff;\n  cursor: pointer;\n  font-size: 2.1rem;\n  height: 32px;\n  margin-top: -0.5rem;\n  padding: 0;\n  width: 32px;\n  transition: all 0.1s;\n\n  &:hover {\n    color: #fff;\n    transform: scale(1.2);\n  }\n`;\n\nexport const SkipButton = styled.button`\n  background-color: transparent;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-size: 1.2rem;\n  height: 32px;\n  padding: 0;\n  width: 32px;\n\n  &:hover {\n    color: #fff;\n  }\n\n  &:disabled:hover {\n    color: #a0a0a0;\n  }\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPauseCircle,\n  faPlayCircle,\n} from '@fortawesome/free-regular-svg-icons';\nimport {\n  faStepBackward,\n  faStepForward,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { Container, Controls, PlayButton, SkipButton } from './styled';\n\nconst playButton = <FontAwesomeIcon icon={faPlayCircle} />;\nconst pauseButton = <FontAwesomeIcon icon={faPauseCircle} />;\nconst prevButton = <FontAwesomeIcon icon={faStepBackward} />;\nconst nextButton = <FontAwesomeIcon icon={faStepForward} />;\n\nexport interface IProps {\n  handleNext: (() => void);\n  handlePause: (() => void);\n  handlePlay: (() => void);\n  handlePrev: (() => void);\n  hasPrevTrack: boolean;\n  hasNextTrack: boolean;\n  isPlaying: boolean;\n}\n\nconst PlayerControls: React.SFC<IProps> = ({\n  handleNext,\n  handlePause,\n  handlePlay,\n  handlePrev,\n  hasPrevTrack,\n  hasNextTrack,\n  isPlaying,\n}) => (\n  <Container>\n    <Controls>\n      <SkipButton\n        onClick={handlePrev}\n        disabled={!hasPrevTrack}\n        data-testid=\"prev-btn\"\n      >\n        {prevButton}\n      </SkipButton>\n      {!isPlaying ? (\n        <PlayButton onClick={handlePlay} data-testid=\"play-btn\">\n          {playButton}\n        </PlayButton>\n      ) : (\n        <PlayButton onClick={handlePause} data-testid=\"pause-btn\">\n          {pauseButton}\n        </PlayButton>\n      )}\n      <SkipButton\n        onClick={handleNext}\n        disabled={!hasNextTrack}\n        data-testid=\"next-btn\"\n      >\n        {nextButton}\n      </SkipButton>\n    </Controls>\n  </Container>\n);\n\nexport default PlayerControls;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 180px;\n\n  & input[type='range'] {\n    -webkit-appearance: none;\n  }\n\n  & input[type='range']::-webkit-slider-runnable-track {\n    background: #a0a0a0;\n    border: none;\n    border-radius: 3px;\n    cursor: pointer;\n    height: 4px;\n  }\n\n  & input[type='range']::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    background: #fff;\n    border: none;\n    border-radius: 50%;\n    height: 12px;\n    margin-top: -4px;\n    outline: none;\n    width: 12px;\n  }\n\n  input[type='range']:focus {\n    outline: none;\n  }\n\n  input[type='range']:focus::-webkit-slider-runnable-track {\n    background: #a0a0a0;\n  }\n`;\n","import React from 'react';\n\nimport { Wrapper } from './styled';\n\nclass VolumeControl extends React.Component {\n  updateVolume = e => {\n    this.props.handleChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <input\n          onInput={this.updateVolume}\n          type=\"range\"\n          min=\"0.0\"\n          max=\"1.0\"\n          step=\"0.01\"\n          defaultValue=\"0.3\"\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default VolumeControl;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.footer`\n  background-color: rgb(40, 40, 40);\n  color: white;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 90px;\n  padding: 0 16px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100vw;\n`;\n","import React, { Component } from 'react';\n// import { Action, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport NowPlaying from '../../components/NowPlaying';\nimport PlayerControls from '../../components/PlayerControls';\nimport VolumeControl from '../../components/VolumeControl';\n\nimport { Wrapper } from './styled';\n\nimport logo from '../../images/Spotify_Icon_RGB_White.png';\n\nimport * as actions from '../../actions';\n\nimport searchPrevTrack from '../../utils/searchPrevTrack';\nimport skipUnavailableTracks from '../../utils/skipUnavailableTracks';\n\ntype TProps = IStateProps & IDispatchProps;\n\nexport interface IPlaylist {\n  track: {\n    album: {\n      images: Array<{ url: string }>;\n    };\n    artists: Array<{ name: string }>;\n    name: string;\n    preview_url: string | null;\n  };\n}\n\nexport interface IStateProps {\n  isPaused: boolean;\n  isPlaying: boolean;\n  playlist: IPlaylist[];\n  songInd: number;\n}\n\nexport interface IDispatchProps {\n  pause: () => void;\n  playNextTrack: (playlist: IPlaylist[], songInd: number) => void;\n  playPrevTrack: (playlist: IPlaylist[], songInd: number) => void;\n  stop: () => void;\n  unpause: () => void;\n}\n\ninterface IState {\n  currentTime: number;\n  hasNextTrack: boolean;\n  hasPrevTrack: boolean;\n  paused: boolean;\n  playing: boolean;\n  totalTime: number;\n}\n\nclass PlayerContainer extends Component<TProps, IState> {\n  audioEl = new Audio();\n  state = {\n    currentTime: 0,\n    hasNextTrack: false,\n    hasPrevTrack: false,\n    paused: false,\n    playing: false,\n    totalTime: 0,\n  };\n\n  componentDidMount() {\n    this.audioEl.addEventListener('ended', this.handleEnded);\n    this.audioEl.addEventListener('timeupdate', this.handleTimeUpdate);\n    this.audioEl.addEventListener('loadeddata', this.handleDataLoaded);\n  }\n\n  componentWillUnmount() {\n    this.audioEl.removeEventListener('ended', this.handleEnded);\n    this.audioEl.removeEventListener('timeupdate', this.handleTimeUpdate);\n    this.audioEl.removeEventListener('loadeddata', this.handleDataLoaded);\n  }\n\n  handleDataLoaded = () => {\n    if (this.state.totalTime !== this.audioEl.duration) {\n      this.setState(() => ({\n        totalTime: this.audioEl.duration,\n      }));\n    }\n  };\n\n  handleTimeUpdate = () => {\n    const { currentTime } = this.audioEl;\n    if (currentTime !== this.state.currentTime) {\n      this.setState(() => ({ currentTime }));\n    }\n  };\n\n  playTrack = () => {\n    const { playlist, songInd } = this.props;\n    const { currentTime } = this.state;\n\n    if (songInd === -1) {\n      return this.pauseTrack();\n    }\n\n    const hasNextTrack = skipUnavailableTracks(playlist, songInd + 1) !== -1;\n    const hasPrevTrack = searchPrevTrack(playlist, songInd) !== -1;\n\n    this.setState(() => ({\n      hasNextTrack,\n      hasPrevTrack,\n    }));\n\n    this.audioEl.src = playlist[songInd].track.preview_url || '';\n    this.audioEl.volume = 0.3;\n    this.audioEl.currentTime = currentTime;\n    const playPromise = this.audioEl.play();\n    // Don't console log error\n    playPromise.catch(noop => noop);\n  };\n\n  stopTrack = () => {\n    this.audioEl.pause();\n    this.audioEl.currentTime = 0;\n  };\n\n  pauseTrack = () => {\n    this.audioEl.pause();\n    this.props.pause();\n  };\n\n  handleEnded = () => {\n    if (!this.state.hasNextTrack) {\n      return this.props.stop();\n    }\n    const { playlist, songInd, playNextTrack } = this.props;\n    playNextTrack(playlist, songInd);\n  };\n\n  handlePlay = () => {\n    if (!this.props.playlist) {\n      return;\n    }\n    this.props.unpause();\n  };\n\n  handlePause = () => {\n    const { isPaused, pause, unpause } = this.props;\n    isPaused ? unpause() : pause();\n  };\n\n  handlePrev = () => {\n    const { playlist, songInd, playPrevTrack } = this.props;\n    if (!this.state.hasPrevTrack) {\n      return;\n    }\n    playPrevTrack(playlist, songInd);\n  };\n\n  handleVolumeChange = (value: number) => {\n    this.audioEl.volume = value;\n  };\n\n  componentWillReceiveProps({\n    isPlaying,\n    isPaused,\n  }: {\n    isPlaying: boolean;\n    isPaused: boolean;\n  }) {\n    const { playing, paused } = this.state;\n    if (isPlaying !== playing || isPaused !== paused) {\n      this.setState(({ currentTime }) => ({\n        currentTime: !isPlaying && !isPaused ? 0 : currentTime,\n        paused: isPaused,\n        playing: isPlaying,\n      }));\n    }\n  }\n\n  componentDidUpdate() {\n    const { paused, playing } = this.state;\n    if (playing && !paused && this.audioEl.paused) {\n      return this.playTrack();\n    }\n    if (playing && paused) {\n      return this.pauseTrack();\n    }\n    if (!playing && !paused) {\n      this.stopTrack();\n    }\n  }\n\n  render() {\n    const { isPlaying, isPaused, playlist, songInd } = this.props;\n    const { hasNextTrack, hasPrevTrack } = this.state;\n    const currentTrack =\n      playlist && songInd !== -1 ? playlist[songInd].track : null;\n\n    return (\n      <Wrapper>\n        <NowPlaying\n          artist={currentTrack ? currentTrack.artists[0].name : ''}\n          title={currentTrack ? currentTrack.name : ''}\n          src={currentTrack ? currentTrack.album.images[0].url : logo}\n        />\n        <PlayerControls\n          isPlaying={!isPaused && isPlaying}\n          hasNextTrack={hasNextTrack}\n          hasPrevTrack={hasPrevTrack}\n          handlePlay={this.handlePlay}\n          handlePause={this.handlePause}\n          handleNext={this.handleEnded}\n          handlePrev={this.handlePrev}\n        />\n        <VolumeControl handleChange={this.handleVolumeChange} />\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any): IStateProps => ({\n  isPaused: state.isPaused,\n  isPlaying: state.isPlaying,\n  playlist: state.tracklist,\n  songInd: state.activeTrackId,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  pause: () => {\n    dispatch(actions.setPause());\n  },\n  playNextTrack: (playlist: IPlaylist[], songInd: number) => {\n    dispatch(actions.playNextTrack(playlist, songInd));\n  },\n  playPrevTrack: (playlist: IPlaylist[], songInd: number) => {\n    dispatch(actions.playPrevTrack(playlist, songInd));\n  },\n  stop: () => dispatch(actions.stopPlay()),\n  unpause: () => {\n    dispatch(actions.unpause());\n  },\n});\n\nexport { PlayerContainer };\n\nexport default connect<IStateProps, IDispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayerContainer);\n","import styled from 'styled-components';\n\nimport { sidebarWidth, playerHeight } from '../../css-variables/layout';\n\nexport const Background = styled.div`\n  background-image: linear-gradient(rgb(81, 76, 68), rgb(8, 7, 7) 85%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  z-index: -1;\n`;\n\nexport const Section = styled.div`\n  margin-left: ${sidebarWidth};\n  margin-bottom: ${playerHeight};\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport Loading from '../../components/Loading';\nimport PlaylistSelectorView from '../../components/PlaylistSelectorView';\nimport PlaylistView from '../../components/PlaylistView';\nimport SideNavbar from '../../components/SideNavbar';\nimport MainContainer from '../MainContainer';\nimport PlayerContainer from '../PlayerContainer';\n\nimport * as actions from '../../actions';\nimport store from '../../store';\n\nimport config from '../../config';\n\nimport { Background, Section, Wrapper } from './styled';\n\nclass App extends Component {\n  state = {\n    tokenLoaded: false,\n    windowWidth: window.innerWidth - 220,\n  };\n\n  // Update the token once an hour\n  tokenInterval = setInterval(() => {\n    store.dispatch(actions.fetchToken());\n  }, 3500 * 1000);\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    store.dispatch(actions.fetchToken()).then(() => {\n      this.setState(() => ({ tokenLoaded: true }));\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    clearInterval(this.tokenInterval);\n  }\n\n  handleResize = (e: any) => {\n    const windowWidth = e.target.innerWidth - 220; // magic number 220 is sidebar width\n    this.setState(() => ({ windowWidth }));\n  };\n\n  render() {\n    if (!this.state.tokenLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <Wrapper>\n            <Background />\n            <SideNavbar />\n            <Section>\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/browse/featured\" />\n                <Redirect exact from=\"/browse\" to=\"/browse/featured\" />\n                <Route\n                  path=\"/users/:username/playlists/:id\"\n                  component={PlaylistView}\n                />\n                <Route\n                  path=\"/playlists/:id\"\n                  component={PlaylistView}\n                />\n                <Route path=\"/albums/:id\" component={PlaylistView} />\n                <Route\n                  path=\"/browse/featured\"\n                  render={routeProps => (\n                    <MainContainer\n                      {...routeProps}\n                      windowWidth={this.state.windowWidth}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/browse\"\n                  render={routeProps => (\n                    <MainContainer\n                      {...routeProps}\n                      windowWidth={this.state.windowWidth}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/view/:id\"\n                  render={routeProps => (\n                    <PlaylistSelectorView\n                      {...routeProps}\n                      windowWidth={this.state.windowWidth}\n                      config={config.category}\n                    />\n                  )}\n                />;\n              </Switch>\n            </Section>\n            <PlayerContainer />\n          </Wrapper>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App';\n\nimport './index.css';\n\n// Disable right click to match Spotify behaviour\nwindow.oncontextmenu = () => false;\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}